<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>腾讯云搭建Hexo博客</title>
      <link href="2021/03/21/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/"/>
      <url>2021/03/21/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h5 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1.安装git"></a>1.安装git</h5><h6 id="https-npm-taobao-org-mirrors-git-for-windows"><a href="#https-npm-taobao-org-mirrors-git-for-windows" class="headerlink" title="https://npm.taobao.org/mirrors/git-for-windows/"></a><a href="https://npm.taobao.org/mirrors/git-for-windows/">https://npm.taobao.org/mirrors/git-for-windows/</a></h6><h5 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2.安装Node.js"></a>2.安装Node.js</h5><p>​    <a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></p><h5 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h5><h6 id="因为国内网速的原因-我们选择用淘宝的镜像-并使用cnpm命令来替代npm命令"><a href="#因为国内网速的原因-我们选择用淘宝的镜像-并使用cnpm命令来替代npm命令" class="headerlink" title="因为国内网速的原因,我们选择用淘宝的镜像,并使用cnpm命令来替代npm命令."></a>因为国内网速的原因,我们选择用淘宝的镜像,并使用cnpm命令来替代npm命令.</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h6 id="执行命令用全局模式安装hexo命令行，全局模式安装意味着你在电脑的任何文件位置都可以使用"><a href="#执行命令用全局模式安装hexo命令行，全局模式安装意味着你在电脑的任何文件位置都可以使用" class="headerlink" title="执行命令用全局模式安装hexo命令行，全局模式安装意味着你在电脑的任何文件位置都可以使用"></a>执行命令用全局模式安装hexo命令行，全局模式安装意味着你在电脑的任何文件位置都可以使用</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>​    本地文件夹新建个存放博客的文件夹,然后进入该文件夹,执行命令初始化blog文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><h6 id="我们会看到如下警告"><a href="#我们会看到如下警告" class="headerlink" title="我们会看到如下警告:"></a>我们会看到如下警告:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WARN  Failed to install dependencies. Please run &#39;npm install&#39; in &quot;F:\My WebSite\blog&quot; folder.</span><br></pre></td></tr></table></figure><h6 id="所以我们进入生成的blog文件夹手动执行以下命令"><a href="#所以我们进入生成的blog文件夹手动执行以下命令" class="headerlink" title="所以我们进入生成的blog文件夹手动执行以下命令:"></a>所以我们进入生成的blog文件夹手动执行以下命令:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install</span><br></pre></td></tr></table></figure><h6 id="执行以下命令来安装插件"><a href="#执行以下命令来安装插件" class="headerlink" title="执行以下命令来安装插件"></a>执行以下命令来安装插件</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br><span class="line">cnpm install hexo-server</span><br></pre></td></tr></table></figure><p>安装成功后 执行以下命令 会显示一个本地链接 我们浏览器上输入它就会看到本地效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>这样本地就完成了配置.</p><h5 id="4-服务器配置"><a href="#4-服务器配置" class="headerlink" title="4.服务器配置"></a>4.服务器配置</h5><h6 id="安装nginx和git"><a href="#安装nginx和git" class="headerlink" title="安装nginx和git"></a>安装nginx和git</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install git</span><br><span class="line">yum -y install nginx</span><br><span class="line">systemctl enable nginx</span><br><span class="line">systemctl restart mginx</span><br></pre></td></tr></table></figure><p>这时候访问服务器的ip地址已经能看到403了</p><h5 id="配置git仓库"><a href="#配置git仓库" class="headerlink" title="配置git仓库"></a>配置git仓库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-4-9-centos ~]# cd &#x2F;opt&#x2F;</span><br><span class="line">[root@VM-4-9-centos opt]# mkdir ztj</span><br><span class="line">[root@VM-4-9-centos opt]# cd ztj&#x2F;</span><br><span class="line">[root@VM-4-9-centos xymt]# mkdir myblog</span><br><span class="line">[root@VM-4-9-centos xymt]# cd myblog&#x2F;</span><br><span class="line">[root@VM-4-9-centos myblog]# chown -R $USER:$USER &#x2F;opt&#x2F;ztj&#x2F;myblog&#x2F;</span><br><span class="line">[root@VM-4-9-centos myblog]# chown -R 755 &#x2F;opt&#x2F;ztj&#x2F;myblog&#x2F;</span><br><span class="line">[root@VM-4-9-centos myblog]# git init --bare myblog.git</span><br></pre></td></tr></table></figure><h5 id="配置Nginx托管文件目录"><a href="#配置Nginx托管文件目录" class="headerlink" title="配置Nginx托管文件目录"></a>配置Nginx托管文件目录</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;var&#x2F;www&#x2F;hexo</span><br><span class="line">chown -R $USER:$USER &#x2F;var&#x2F;www&#x2F;hexo</span><br><span class="line">chmod -R 755 &#x2F;var&#x2F;www&#x2F;hexo</span><br></pre></td></tr></table></figure><h6 id="同时修改nginx的配置文件-vim-etc-nginx-nginx-conf"><a href="#同时修改nginx的配置文件-vim-etc-nginx-nginx-conf" class="headerlink" title="同时修改nginx的配置文件 vim /etc/nginx/nginx.conf"></a>同时修改nginx的配置文件 vim /etc/nginx/nginx.conf</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root         &#x2F;var&#x2F;www&#x2F;hexo;</span><br></pre></td></tr></table></figure><h5 id="配置Git-hooks"><a href="#配置Git-hooks" class="headerlink" title="配置Git hooks"></a>配置Git hooks</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;opt&#x2F;ztj&#x2F;myblog&#x2F;myblog.git&#x2F;hooks&#x2F;post-receive</span><br></pre></td></tr></table></figure><h6 id="输入以下文字"><a href="#输入以下文字" class="headerlink" title="输入以下文字"></a>输入以下文字</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">git --work-tree&#x3D;&#x2F;var&#x2F;www&#x2F;hexo --git-dir&#x3D;&#x2F;var&#x2F;repo&#x2F;ganahBlog.git checkout -f</span><br></pre></td></tr></table></figure><p>同时赋予执行权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x &#x2F;opt&#x2F;ztj&#x2F;myblog&#x2F;myblog.git&#x2F;hooks&#x2F;post-receive</span><br><span class="line">chmod -R 777 &#x2F;var&#x2F;www&#x2F;hexo</span><br></pre></td></tr></table></figure><h5 id="配置用户公匙-使得本地可以从服务器clone数据和push"><a href="#配置用户公匙-使得本地可以从服务器clone数据和push" class="headerlink" title="配置用户公匙 使得本地可以从服务器clone数据和push"></a>配置用户公匙 使得本地可以从服务器clone数据和push</h5><h6 id="在根目录下创建-ssh文件夹"><a href="#在根目录下创建-ssh文件夹" class="headerlink" title="在根目录下创建 .ssh文件夹"></a>在根目录下创建 <code>.ssh</code>文件夹</h6><h6 id="本地打开GitBash"><a href="#本地打开GitBash" class="headerlink" title="本地打开GitBash"></a>本地打开GitBash</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">cd .ssh</span><br><span class="line">ssh-keygen</span><br><span class="line">chmod 700 ~&#x2F;.ssh</span><br><span class="line">chmod 600 ~&#x2F;.ssh&#x2F;id_rsa</span><br></pre></td></tr></table></figure><h6 id="上传id-rsa-pub文件到服务器刚刚创建的-ssh文件夹中-并执行以下命令"><a href="#上传id-rsa-pub文件到服务器刚刚创建的-ssh文件夹中-并执行以下命令" class="headerlink" title="上传id_rsa.pub文件到服务器刚刚创建的.ssh文件夹中 并执行以下命令"></a>上传id_rsa.pub文件到服务器刚刚创建的.ssh文件夹中 并执行以下命令</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;.ssh</span><br><span class="line">cp id_rsa.pub authorized_keys</span><br><span class="line">cat id_rsa.pub &gt;&gt; ~&#x2F;.ssh&#x2F;authorized_keys</span><br><span class="line"></span><br><span class="line">修改文件权限：</span><br><span class="line">chmod 600 ~&#x2F;.ssh&#x2F;authorized_keys</span><br><span class="line">chmod 700 ~&#x2F;.ssh</span><br><span class="line"></span><br><span class="line">确保设置了正确的SELinux上下文。</span><br><span class="line">restorecon -Rv ~&#x2F;.ssh</span><br></pre></td></tr></table></figure><p>本地执行测试命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -v git@xxx.xxx.xxx.xxx（你的公网 IP）</span><br><span class="line">显示:</span><br><span class="line">Last login: Thu Mar 11 22:57:10 2021 from 39.182.12.170</span><br></pre></td></tr></table></figure><h5 id="5-部署到远程服务器"><a href="#5-部署到远程服务器" class="headerlink" title="5.部署到远程服务器"></a>5.部署到远程服务器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone root@&#123;云服务器IP&#125;:&#x2F;var&#x2F;repo&#x2F;ganahBlog.git</span><br></pre></td></tr></table></figure><h6 id="编辑站点配置文件-config-yml-将-url-改成https-云服务器IP"><a href="#编辑站点配置文件-config-yml-将-url-改成https-云服务器IP" class="headerlink" title="编辑站点配置文件_config.yml , 将 url 改成https://{云服务器IP}/"></a>编辑<strong>站点</strong>配置文件<code>_config.yml</code> , 将 url 改成<code>https://&#123;云服务器IP&#125;/</code></h6><h6 id="将-deploy-repo改为-服务器用户名-服务IP-var-repo-ganahBlog-git-将"><a href="#将-deploy-repo改为-服务器用户名-服务IP-var-repo-ganahBlog-git-将" class="headerlink" title="将 deploy repo改为 {服务器用户名}@{服务IP}:/var/repo/ganahBlog.git 将"></a>将 deploy repo改为 <code>&#123;服务器用户名&#125;@&#123;服务IP&#125;:/var/repo/ganahBlog.git</code> 将</h6><h6 id="type改成git"><a href="#type改成git" class="headerlink" title="type改成git"></a>type改成git</h6><h6 id="在个人博客站点目录下，打开-Git-bash-使用-以下命令部署："><a href="#在个人博客站点目录下，打开-Git-bash-使用-以下命令部署：" class="headerlink" title="在个人博客站点目录下，打开 Git bash ,使用 以下命令部署："></a>在个人博客站点目录下，打开 Git bash ,使用 以下命令部署：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g -d</span><br></pre></td></tr></table></figure><p>出现问题:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">git报错remote: error: cannot run hooks&#x2F;post-receive: No such file or directory</span><br><span class="line"></span><br><span class="line">如果你也显示这个错误但是其实在该路径上有上有这个文件，那么显然你遇到和我一样的情况，即你是Windows下创建的文件，但是试图在Lunix系统去打开它。这是在Windows下调用CentOS上文件显示的结果，如果你还有疑虑可以尝试在CentOS直接打开该文件，那么你将会遇到下面的错误：</span><br><span class="line">-bash: hooks&#x2F;post-receive: &#x2F;bin&#x2F;bash^M: bad interpreter: No such file or directory</span><br><span class="line"></span><br><span class="line">因为各个操作系统的文件对于换行都是不一样的，对于DOS以及Windows操作系统是以CRLF标记换行，即一个回车+一个换行，而Linux或者Unix上面是以LF为标记的，即只有一个换行，因此两者的差异决定了两个系统的文件是不能随便移植的。</span><br><span class="line"></span><br><span class="line">解决方案：</span><br><span class="line"></span><br><span class="line">我说下我的解决方案哈，最简单的方式通过Linux命令将Windows文件转换为Lunix文件——dos2unix</span><br><span class="line"></span><br><span class="line">不过在此之前还是要安装一下这个工具：</span><br><span class="line"></span><br><span class="line">yum install -y dos2unix</span><br><span class="line"></span><br><span class="line">完成后，直接命令加文件名称进行转换：</span><br><span class="line"></span><br><span class="line">dos2unix post-receive</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/01/01/hello-world/"/>
      <url>2021/01/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
